name: XML_CHECKeR

on:
  push:
    branches:
      - main

jobs:
  xml_checker:
    runs-on: ubuntu-latest
    name: Test changed-files in the repository
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Modules
        run: |
          python -m pip install bs4 lxml
        
      # Get the version of the commits using a module
      - name: Get the version of the commits
        id: get_version
        uses: hsblhsn/version-or-commit-sha@main
      
      # Retrieve every new/modified/added files between the two pushes on this repository
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v37

      - name: Verification of the files with the python script  # Process changed XML files and set bad_files variable
        id: first-lines
        run: |
          # Initialize the variable
          bad_file=""

          # Loop through each changed file
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            # Check if the file is an XML file
            if [[ $file == *.xml ]]; then
              # Print a message in the command section to indicate file processing
              echo "Processing $file"

              # Run the XML check script and capture the output (either: None or a list of missing tags in the file)
              result=$(python .github/workflows/xml_check.py "$file")

              # Check if the result is not empty or 'None'
              if [[ -n $result && $result != 'None' ]]; then
                # Append the result to a variable (using <br> for line breaks and "`...`" to display tags)
                bad_file="${bad_file}<br>Le fichier $file n'a pas les balises :\`${result}\`<br>"

                # Set the environment variable BAD_FILES
                echo "BAD_FILES=$bad_file" >> $GITHUB_ENV
              fi
            else
              echo "Skipping $file - not an XML file"
            fi
          done

      # Create an issue if the python script returned any bad files using a module (documentation: https://github.com/marketplace/actions/github-issue-creator-action)
      - name: Create Issue on Error
        if: ${{ env.BAD_FILES != '' }}
        uses: lionelrrivas/github-issue-creator@v1.0.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: Missing XML Tags
          body: |
            ${{ env.BAD_FILES }}
            Push version: ${{ steps.get_version.outputs.VERSION_OR_COMMIT_SHA }}
          assignees: |
            ${{ github.repository_owner }}
            ${{ github.actor }}
